var Handlebars = require("handlebars");module.exports = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "";


  buffer += "<div id=\"docs\" class=\"section-header\">\n  <div class=\"container\">\n    <h2>\n      Docs\n    </h2>\n    <p>\n      Overview of all events and method you can leverage in SideComments.js\n    </p>\n  </div>\n</div>\n<div class=\"container\">\n  <h3>\n    SideComments Constructor\n  </h3>\n  \n  <div class=\"doc-section\">\n    <p>\n      The constructor takes one required and two optional arguments:\n      <br>\n      <ul class=\"arguments-list\">\n        <li>\n          <code>$el</code> (String):\n          <br>\n          The element which contains all the <code>.commentable-section</code> elements.\n        </li>\n        <li>\n          <code>currentUser</code> (Object) *optional:\n          <br>\n          The user representation new comments will be posted under. As it's optional, you can just pass <code>null</code> if there is no current user at the time and set one at a later time with the <code>setCurrentUser</code> method, which is documented below. The current user object needs to look like this: <a href=\"https://gist.github.com/aroc/02a0f8badf219da12667\">https://gist.github.com/aroc/02a0f8badf219da12667</a>\n        </li>\n        <li>\n          <code>existingComments</code> (Array) *optional:\n          <br>\n          An array of existing comments that you want inserted at initialization time. You can also insert comments yourself at later time with the <code>insertComment</code> method, outlined below. The structure of the objects in this array needs to look like this: <a href=\"https://gist.github.com/aroc/54a2669783231a0d2215\">https://gist.github.com/aroc/54a2669783231a0d2215</a>\n        </li>\n      </ul>\n    </p>\n  </div>\n\n  <h3>\n    Methods\n  </h3>\n  \n  <div class=\"doc-section\">\n    <h4>\n      deselectSection(sectionId)\n    </h4>\n    <p>\n      <strong>Description:</strong> De-select a section and make it inactive, hiding the side comments. If the side comments are already hidden, this method will have no effect.\n    </p>\n    <script src=\"https://gist.github.com/aroc/6db0193d3a31030926c3.js\"></script>\n  </div>\n  \n  <div class=\"doc-section\">\n    <h4>\n      setCurrentUser(currentUser)\n    </h4>\n    <p>\n      <strong>Description:</strong> Sets the currentUser to be used for all new comments.\n    </p>\n    <script src=\"https://gist.github.com/aroc/106df5b9b5356dc4c074.js\"></script>\n  </div>\n  \n  <div class=\"doc-section\">\n    <h4>\n      removeCurrentUser()\n    </h4>\n    <p>\n      <strong>Description:</strong> Removes the currentUser. Without a currentUser, comments amy not be posted. Instead, the <code>addCommentAttempted</code> event gets triggered when a user clicks the \"Add Comment\" button.\n    </p>\n  </div>\n  \n  <div class=\"doc-section\">\n    <h4>\n      insertComment(comment)\n    </h4>\n    <p>\n      <strong>Description:</strong> Inserts a comment into the markup. It will insert into the section specified by the comment object.\n    </p>\n    <script src=\"https://gist.github.com/aroc/9e1ef2ec334440a39abb.js\"></script>\n  </div>\n\n  <div class=\"doc-section\">\n    <h4>\n      removeComment(sectionId, commentId)\n    </h4>\n    <p>\n      <strong>Description:</strong> Removes a comment from the SideComments object and from the markup.\n    </p>\n    \n  </div>\n  \n  <div class=\"doc-section\">\n    <h4>\n      commentsAreVisible()\n    </h4>\n    <p>\n      <strong>Description:</strong> Returns true if the comments are visbile, false if they are not.\n    </p>\n  </div>\n  \n  <div class=\"doc-section\">\n    <h4>\n      destroy()\n    </h4>\n    <p>\n      <strong>Description:</strong> Removing the sideComments object, cleaning up any event bindings and removing any markup from the DOM.\n    </p>\n  </div>\n\n  <h3>\n    Events\n  </h3>\n\n  <table class=\"table table-bordered\">\n    <thead>\n      <tr>\n        <td>\n          Event Name\n        </td>\n        <td>\n          Values Passed\n        </td>\n        <td width=\"50%\">\n          Description\n        </td>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td>\n          commentPosted\n        </td>\n        <td>\n          comment (Object)\n        </td>\n        <td>\n          Fired after a user fills out the comment form and clicks \"Post\".\n        </td>\n      </tr>\n      <tr>\n        <td>\n          addCommentAttempted\n        </td>\n        <td>\n          None\n        </td>\n        <td>\n          Fired when a sideComments object doesn't have a current user and the \"Add Comment\" button is clicked.\n        </td>\n      </tr>\n      <tr>\n        <td>\n          commentDeleted\n        </td>\n        <td>\n          comment (Object)\n        </td>\n        <td>\n          Fired after a user has clicked \"Delete\" on one of their comments and has confirmed with the dialog that they do want to delete it.\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</div>";
  return buffer;
  });