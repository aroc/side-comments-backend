var Handlebars = require("handlebars");module.exports = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  


  return "<div id=\"demo\" class=\"section-header first\">\n  <div class=\"container\">\n    <h2>Demo</h2>\n    <p>\n      Below is an example of SideComments.js in action. Each section of text can be commented on. Go ahead and give it a try!\n    </p>\n  </div>\n</div>\n<div id=\"commentable-container\" class=\"commentable-container container\">\n\n  <h1 class=\"title center-text\">\n    SideComments.js In Action\n  </h1>\n  <p data-section-id=\"1\" class=\"commentable-section\">\n    Each paragraph tag has the \"commentable-section\" class, making it a section which can be commented on after you've initialized a new SideComments object and pointed it at the parent element, which is \"#commentable-container\" for this demo.\n  </p>\n  <p data-section-id=\"2\" class=\"commentable-section\">\n    Hover over each section and you'll notice a little \"comment bubble\" pop up. Clicking on the markers on the right will show the SideComments. Sections without any comments only show their marker on hover.\n  </p>\n  <p data-section-id=\"3\" class=\"commentable-section\">\n    This is the default theme that comes with SideComments.js. You can easily theme SideComments to your liking by not including \"default-theme.css\" and just styling it all yourself.\n  </p>\n</div>";
  });